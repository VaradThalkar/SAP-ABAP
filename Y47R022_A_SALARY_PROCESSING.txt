*&---------------------------------------------------------------------*
*& Report Y47R022_A_SALARY_PROCESSIG
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT y47r022_a_salary_processing.
*--------------------------sgp-----------------------------------------*
*    MODULE    :
*---------------------------------------------------------------------*
*    Program   : Updates Tables ( X )
*                Downloads data (   )
*                Outputs List   ( X )
*
*    Objective                 : ALV Report to Display Salary, Employee
*                              : Details and Monthly Attendance
*    Technical Spec No         : ...............
*    Functional Consultant Name: Anuj Mhatre
*    Date Created              : 05.10.2023
*    Abap Consultant Name      : Varad R Thalkar
*    Client Name               : TechWit
*    Implementer Company       : TechWit
*---------------------------------------------------------------------*
*    External Dependencies                                            *
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
*    Amendment History
*---------------------------------------------------------------------*
* Who        Change ID    Reason                                      *
*                                                                     *
* XXXXXXXXX  AADDMMYYYY Where XXXX = Developers Name................. *
*            AA- Developers Initial ................................. *
*            ........................................................ *
*            ........................................................ *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*       Includes                                                      *
*---------------------------------------------------------------------*
*INCLUDE   :
*---------------------------------------------------------------------*
TABLES   : y47m_empmst, y47m_salMSt, y47d_mtdatt, y47d_saltrn, y47c_deptmst, y47c_workloc, y47c_salhd.
*---------------------------------------------------------------------*
*       Types                    Begin with TY_
*---------------------------------------------------------------------*
TYPE-POOLS: slis.                                        " For ALV List
TYPES: stat_offset(2)  TYPE n.
TYPES: BEGIN OF ty_monthlyAtt,
         empno        TYPE y47d_mtdatt-empno,
         yymm         TYPE y47d_mtdatt-yymm,
         total_days   TYPE y47d_mtdatt-days_present,
         days_present TYPE y47d_mtdatt-days_present,
         status       TYPE string,
         cellcolor    TYPE lvc_t_scol,
       END OF ty_monthlyatt.

TYPES: BEGIN OF ty_Salmst,
         empno  LIKE y47m_salmst-empno,
         salhd  LIKE y47m_salmst-salhd,
         salary LIKE y47m_salmst-salary,
         waers  LIKE y47m_salmst-waers,
         saltp  TYPE String,
       END OF ty_salmst.


TYPES: BEGIN OF ty_empmst_temp,
         empno       TYPE y47m_empmst-empno,
         empnm       TYPE y47m_empmst-empnm,
         gender      TYPE y47m_empmst-gender,
         birthdt     TYPE y47m_empmst-birthdt,
         joiningdt   TYPE y47m_empmst-joiningdt,
         phone_no    TYPE y47m_empmst-phone_no,
         email_id    TYPE y47m_empmst-email_id,
         deptcd      TYPE y47m_empmst-deptcd,
         wlcd        TYPE y47m_empmst-wlcd,
         designation TYPE y47m_empmst-designation,
         bankac      TYPE y47m_empmst-bankac,
         banknm      TYPE y47m_empmst-banknm,

       END OF ty_empmst_temp.

TYPES: BEGIN OF ty_empmst,
         empno       TYPE y47m_empmst-empno,
         empnm       TYPE y47m_empmst-empnm,
         gender      TYPE String,
         birthdt     TYPE y47m_empmst-birthdt,
         joiningdt   TYPE y47m_empmst-joiningdt,
         phone_no    TYPE y47m_empmst-phone_no,
         email_id    TYPE y47m_empmst-email_id,
         deptcd      TYPE y47c_deptmst-deptnm,
         wlcd        TYPE y47c_workloc-wldesc,
         designation TYPE y47m_empmst-designation,
         bankac      TYPE y47m_empmst-bankac,
         banknm      TYPE y47m_empmst-banknm,
         Total       TYPE y47m_salmst-salary,
         waers       TYPE y47m_salmst-waers,
       END OF ty_empmst.

TYPES: BEGIN OF ty_Saltrn,
         mandt  TYPE sy-mandt,
         empno  LIKE y47m_salmst-empno,
         yymm   LIKE y47D_saltrn-yymm,
         salhd  TYPE char30,
         salary LIKE y47m_salmst-salary,
         waers  LIKE y47m_salmst-waers,
         cellcolor    TYPE lvc_t_scol,
       END OF ty_saltrn.
*TYPES: BEGIN OF ty_tab,
*       bukrs type t001-bukrs,
*       BUTXT type t001-butxt.
*TYPES : END OF ty_tab.

*---------------------------------------------------------------------*
*       Constants                Begin with CV_
*---------------------------------------------------------------------*
*CONSTANTS:
*      cv_formname_top_of_page TYPE slis_formname VALUE 'TOP_OF_PAGE'.
*---------------------------------------------------------------------*
*       Data                     Begin with gv_ , gs,  gt_
*---------------------------------------------------------------------*
*DATA  : gt_fieldcat         TYPE slis_t_fieldcat_alv,
*        gt_events           TYPE slis_t_event,
*        gs_variant          LIKE disvariant,
*        gv_user_command     TYPE slis_formname VALUE 'USER_COMMAND',
*        gv_status           TYPE slis_formname VALUE 'SET_PF_STATUS',
*        gt_list_top_of_page TYPE slis_t_listheader,
*        gv_repid            LIKE sy-repid,
*
DATA : gt_fieldcat      TYPE slis_t_fieldcat_alv,
       gt_fieldcat1     TYPE slis_t_fieldcat_alv,
       gt_fieldcat2     TYPE slis_t_fieldcat_alv,
       gt_fieldcat3     TYPE slis_t_fieldcat_alv,
       gs_fieldcat      TYPE slis_fieldcat_alv,
       gs_layout        TYPE slis_layout_alv,
       gs_listheader    TYPE slis_listheader,
       gt_listheader    TYPE slis_t_listheader,
       gs_listheader1   TYPE slis_listheader,
       gt_listheader1   TYPE slis_t_listheader,
       gs_listheader2   TYPE slis_listheader,
       gt_listheader2   TYPE slis_t_listheader,
       gv_pos           TYPE i,
       gv_date          TYPE sy-datum,
       gv_date_string   TYPE string,
       gv_date_len      TYPE i,
       gv_date1         TYPE string,
       gv_date2         TYPE string,
       gv_click         TYPE slis_entry,
       gv_screen        TYPE i VALUE 1,
       gs_cellcolor     TYPE lvc_s_scol,
       gv_days_in_month TYPE /osp/dt_day,
       gs_fieldcat1     TYPE slis_fieldcat_alv.

*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*       Infotypes                   ( HR Module Specific)
*---------------------------------------------------------------------*
*INFOTYPES :
*---------------------------------------------------------------------*
*       Internal tables          Begin with gt_
*---------------------------------------------------------------------*
*data : gt_tab type table of ty_tab.
DATA: gt_mtdatt         TYPE TABLE OF y47d_mtdatt,
      gs_mtdatt         TYPE y47d_mtdatt,

      gt_monthlyatt     TYPE TABLE OF ty_monthlyatt,
      gs_monthlyatt     TYPE ty_monthlyatt,

      gt_salary_Temp    TYPE TABLE OF ty_salmst,
      gs_salary_Temp    TYPE ty_salmst,

      gt_salary_details TYPE TABLE OF ty_salmst,
      gs_salary_details TYPE ty_salmst,

      gt_salmst         TYPE TABLE OF ty_salmst,
      gs_salmst         TYPE ty_salmst,

      gt_empmst         TYPE TABLE OF ty_empmst,
      gs_empmst         TYPE ty_empmst,

      gt_empmst_temp    TYPE TABLE OF ty_empmst_temp,
      gs_empmst_temp    TYPE ty_empmst_temp,

      gt_saltrn_temp    TYPE TABLE OF y47d_Saltrn,
      gs_saltrn_temp    TYPE y47d_Saltrn,

      gt_saltrn         TYPE TABLE OF ty_Saltrn,
      gs_saltrn         TYPE ty_Saltrn,

      gt_saltrn_temp1   TYPE TABLE OF ty_saltrn,
      gs_saltrn_temp1   TYPE ty_saltrn.


*---------------------------------------------------------------------*
*       Field Symbols            Begin with FS_
*---------------------------------------------------------------------*
*FIELD-SYMBOLS:
*---------------------------------------------------------------------*
*       Field Groups             Begin with FG_
*---------------------------------------------------------------------*
*FIELD-GROUPS :
*---------------------------------------------------------------------*
*       Insert
*---------------------------------------------------------------------*
*INSERT   :
*---------------------------------------------------------------------*
*       Controls                Begin with TC_ for table controls
*---------------------------------------------------------------------*
*CONTROLS :
*---------------------------------------------------------------------*
*       Select Options          Begin with S_,p_,pr_,pc_
*---------------------------------------------------------------------*
SELECTION-SCREEN : BEGIN OF BLOCK blk1 WITH FRAME TITLE TEXT-001.
  SELECT-OPTIONS : s_empno FOR y47D_MTDATT-empno.
  PARAMETERS : p_YYMM TYPE y47d_mtdatt-yymm.
SELECTION-SCREEN : END OF BLOCK blk1.


SELECTION-SCREEN : BEGIN OF BLOCK blk12 WITH FRAME TITLE TEXT-012.
  PARAMETERS : pr_ATT RADIOBUTTON GROUP grp1 DEFAULT 'X',
               pr_SAL RADIOBUTTON GROUP grp1.
SELECTION-SCREEN : END OF BLOCK blk12.
*---------------------------------------------------------------------*
*       Initialisation
*---------------------------------------------------------------------*
INITIALIZATION.
*---------------------------------------------------------------------**
*       At selection-screen
*---------------------------------------------------------------------*
AT SELECTION-SCREEN .
  PERFORM Selection_screen_Validation.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_yymm.                        "search help for parameter year month.
  PERFORM f4_help.
*AT SELECTION-SCREEN ON p_vari.
*  PERFORM alv_pre_selection.

*AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_vari.
*  PERFORM alv_f4_variant.
************************************************************************
*       S T A R T   O F   S E L E C T I O N
************************************************************************
START-OF-SELECTION.
  IF pr_att = abap_true.
    PERFORM get_att_data.
    PERFORM Display_data.
    PERFORM AlV_DISPLAY.
  ELSEIF pr_sal = abap_true.
    PERFORM get_sal_data.
    PERFORM process_data1.
  ENDIF.

*  PERFORM get_EMP_DATA.
*  PERFORM fill_other_data.
*  PERFORM fill_field_catlog .
*  PERFORM build_eventtab USING gt_events[].
**  perform comment_build  using gt_list_top_of_page[].
*
*  PERFORM call_alv.

END-OF-SELECTION.

************************************************************************
*       E N D       O F   S E L E C T I O N
************************************************************************
*eject
*-----------------------------------------------------------------
*       At line selection
*---------------------------------------------------------------------*
*AT LINE-SELECTION.
*---------------------------------------------------------------------*
*       PF Key Processing
*---------------------------------------------------------------------*
*AT PFXX.
*---------------------------------------------------------------------*
*       User Command Processing
*---------------------------------------------------------------------*
*AT USER-COMMAND.
*---------------------------------------------------------------------*
*       Top Of Page
*---------------------------------------------------------------------*
FORM top_of_page.
*  WRITE : /10 p_head.
*  WRITE : /01 'Run Date :',sy-datum, 'Run Time :',sy-uzeit.

  DATA: lt_header TYPE slis_t_listheader,
        ls_header TYPE slis_listheader,
        lv_date type date.

CONCATENATE  sy-datum+6(2)
             sy-datum+4(2)
             sy-datum(4)
             into lv_date
             SEPARATED BY '/'.
  IF pr_att = abap_true AND gv_screen = 1.
    ls_header-typ = 'H'. "H
    ls_header-info = 'EMPLOYEE ATTENDANCE DETAILS'.
    APPEND ls_header TO lt_header.

    ls_header-typ = 'S'. "H
    ls_header-info = lv_date.
    APPEND ls_header TO lt_header.
    ls_header-info = ''.
    APPEND ls_header TO lt_header.
  ENDIF.
  IF pr_sal = abap_true AND gv_screen = 1.
    ls_header-typ = 'H'. "H
    ls_header-info = 'EMPLOYEE SALARY DETAILS'.
    APPEND ls_header TO lt_header.

    ls_header-typ = 'S'. "H
    ls_header-info = lv_date.
    APPEND ls_header TO lt_header.
    ls_header-info = ''.
    APPEND ls_header TO lt_header.
  ENDIF.

  IF  gv_screen = 2.
    ls_header-typ = 'H'. "H
    ls_header-info = 'EMPLOYEE MASTER DETAILS'.
    APPEND ls_header TO lt_header.

    ls_header-typ = 'S'. "H
    ls_header-info = lv_date.
    APPEND ls_header TO lt_header.
    ls_header-info = ''.
    APPEND ls_header TO lt_header.
  ENDIF.




*  CONCATENATE 'Fiscal year ' p_gjahr 'Period From :'  s_monat-low 'Perold To :' s_monat-high INTO ls_header-info SEPARATED BY space.
*  APPEND ls_header TO lt_header.

*  data : lv_cdate1(10),
*         lv_cdate2(10).
*  WRITE : sy-datum TO lv_cdate1, sy-uzeit TO lv_cdate2.
*  CONCATENATE 'Run Date :' lv_cdate1 'Time:' lv_cdate2 INTO ls_header-info SEPARATED BY space.
*  APPEND ls_header TO lt_header.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = lt_header.
*
ENDFORM.                    "top_of_page
**---------------------------------------------------------------------*
**       End Of Page
**---------------------------------------------------------------------*
**END-OF-PAGE.*eject.
**----------------------------------------------------------------------*
**       FORM Fnnn-xxxxxxxxxx.
**----------------------------------------------------------------------
**       text
**----------------------------------------------------------------------
**  -->  p1        text
**  <--  p2        text
**----------------------------------------------------------------------
**FORM FNNN-XXXXXXXX.
**----------------------------------------------------------------------*
** Local variables must begin with L, followed by the naming convention
** for the corresponding variable type eg. LW_, LIT_
**----------------------------------------------------------------------
**ENDFORM.*eject.*Any declarations for classes, methods and interfaces.
*
************************---------------------****************************
**                      E N D  O F  A B A P
************************---------------------****************************
*FORM alv_pre_selection.
*
*  gs_variant-report = sy-repid.
*
*  IF NOT p_vari IS INITIAL.
*    gs_variant-variant = p_vari.
*    CALL FUNCTION 'REUSE_ALV_VARIANT_EXISTENCE'
*      EXPORTING
*        i_save     = 'A'
*      CHANGING
*        cs_variant = gs_variant.
*  ENDIF.
*
*ENDFORM.                    " alv_pre_selection
**&---------------------------------------------------------------------*
**&      Form  alv_f4_variant
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
**  -->  p1        text
**  <--  p2        text
**----------------------------------------------------------------------*
*FORM alv_f4_variant.
*  gs_variant-report = sy-repid.
*  DATA :       g_save(1)           TYPE c VALUE 'A',
*        g_exit(1)           TYPE c.
*  CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
*    EXPORTING
*      is_variant = gs_variant
*      i_save     = g_save
*    IMPORTING
*      e_exit     = g_exit
*      es_variant = gs_variant
*    EXCEPTIONS
*      not_found  = 2.
*  IF sy-subrc = 2.
*    MESSAGE ID sy-msgid TYPE 'S'      NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ELSE.
*    IF g_exit = space.
*      p_vari = gs_variant-variant.
*    ENDIF.
*  ENDIF.
*
*
*
*
*
*  p_vari = gs_variant-variant.
*
*ENDFORM.                    " alv_f4_variant
**&---------------------------------------------------------------------*
**&      Form  fieldcat_init
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
**      -->P_GT_FIELDCAT[]  text
**----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form GET_ATT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_att_data .
  DATA : lv_date  TYPE dats,
         lv_index TYPE i.

  SELECT * FROM y47d_mtdatt
    INTO TABLE gt_mtdatt
    WHERE empno IN s_empno
  AND yymm = p_yymm.
  IF sy-subrc <> 0.
    MESSAGE ID 'Y47' TYPE 'E' NUMBER '025'.
  ENDIF.
  CONCATENATE p_YYMM '01' INTO lv_date.
  CALL FUNCTION '/OSP/GET_DAYS_IN_MONTH'
    EXPORTING
      iv_date = lv_date
    IMPORTING
      ev_days = gs_monthlyatt-total_days.

  LOOP AT gt_mtdatt INTO gs_mtdatt.
    MOVE-CORRESPONDING gs_mtdatt  TO gs_monthlyatt.
    IF ( gs_monthlyatt-total_days / 2 ) >= gS_monthlyatt-days_present.
      gs_monthlyatt-status = 'Low Attendance'.
    ELSEIF gs_monthlyatt-days_present = gs_monthlyatt-total_days.
      gs_monthlyatt-status = 'Perfect Attendance'.
    ELSE.
      gs_monthlyatt-status = 'Good Attendance'.
    ENDIF.
    APPEND gs_monthlyatt  TO gt_monthlyatt .
*    CLEAR:gs_monthlyatt-status.
  ENDLOOP.

  LOOP AT gt_monthlyatt INTO gs_monthlyatt.
*    CLEAR lv_index.
    lv_index = sy-tabix.

    IF gs_monthlyatt-status = 'Low Attendance'.
      gs_cellcolor-fname = 'status'.
      gs_cellcolor-color-col = 6.
      gs_cellcolor-color-int = '1'.
      gs_cellcolor-color-inv = '0'.
      APPEND gs_cellcolor TO gs_monthlyatt-cellcolor.
      CLEAR gs_cellcolor.
      MODIFY gt_monthlyatt FROM  gs_monthlyatt INDEX lv_index  TRANSPORTING cellcolor.
    ELSEIF gs_monthlyatt-status = 'Good Attendance'.
      gs_cellcolor-fname = 'status'.
      gs_cellcolor-color-col = 5.
      gs_cellcolor-color-int = '1'.
      gs_cellcolor-color-inv = '0'.
      APPEND gs_cellcolor TO gs_monthlyatt-cellcolor.
      CLEAR gs_cellcolor.
      MODIFY gt_monthlyatt  FROM  gs_monthlyatt INDEX lv_index TRANSPORTING cellcolor.
    ENDIF.
  ENDLOOP.

ENDFORM.

FORM Display_data .

  PERFORM fill_field USING 'empno' 'gt_monthlyatt' 'Employee Number' '' '' '' ''.
  PERFORM fill_field USING 'yymm' 'gt_monthlyatt' 'Year & Month' '' '' '' ''.
  PERFORM fill_field USING 'total_days' 'gt_monthlyatt' 'Total Days' '' '' '' ''.
  PERFORM fill_field USING 'days_present' 'gt_monthlyatt' 'Days Present' '' '' '' ''.
  PERFORM fill_field USING 'status' 'gt_monthlyatt' 'Status' '' '' '' ''.
*  PERFORM fill_field USING 'BUTXT' 'BUTXT' 'T001' '' '' '' ''.

ENDFORM.                    " fieldcat_init
*&---------------------------------------------------------------------*
*& Form GET_SAL_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_sal_data .

  SELECT
    a~empno a~salhd a~salary a~waers b~saltp
    FROM Y47m_salmst AS a INNER JOIN Y47c_salhd AS b
    ON a~salhd = b~salhd
    INTO TABLE gt_salary_Temp
  WHERE a~empno IN s_empno.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form process_data1
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM process_data1 .

  PERFORM get_att_data.

  DATA: lv_day_present    TYPE  y47d_mtdatt-days_present,
        lv_total_days     TYPE Y47d_mtdatt-days_present,
        lv_monthly_salary TYPE y47salary,
        lv_pf             TYPE y47salary,
        lv_sub_total      TYPE Y47salary,
        lv_total          TYPE Y47salary,
        lv_total_temp     TYPE Y47salary,
        lv_empno          TYPE y47empno.

  LOOP AT gt_salary_temp INTO gs_salary_temp.
    CASE gs_Salary_temp-saltp.
      WHEN 'E'.
        gs_Salary_temp-saltp = 'Earning'.
      WHEN 'D'.
        gs_Salary_temp-saltp = 'Deduction'.
    ENDCASE.
    MODIFY gt_salary_temp FROM gs_salary_temp TRANSPORTING saltp.
    READ TABLE gt_monthlyatt INTO gs_monthlyatt WITH KEY empno = gs_salary_temp-empno.
    IF sy-subrc = 0.
      MOVE-CORRESPONDING gs_salary_temp TO gs_saltrn_temp1.
      gs_saltrn_temp1-yymm = p_yymm.
      APPEND gs_saltrn_temp1 TO gt_saltrn_temp1.
      CLEAR gs_saltrn_temp1.
    ENDIF.
  ENDLOOP.


  LOOP AT gt_saltrn_temp1 INTO gs_saltrn_temp1.
    AT NEW empno.
      CLEAR: lv_sub_total,lv_total_temp,lv_total.
      lv_empno = gs_saltrn_temp1-empno.
      LOOP AT gt_saltrn_temp1 INTO gs_saltrn_temp1.
        IF gs_saltrn_temp1-empno = lv_empno.
          MOVE-CORRESPONDING gs_saltrn_temp1 TO gs_saltrn.
          APPEND gs_saltrn TO gt_saltrn.
        ENDIF.
      ENDLOOP.
      CLEAR lv_sub_total.
      LOOP AT gt_saltrn INTO gs_saltrn.
        IF ( gs_saltrn-salhd = 'BAS' OR gs_saltrn-salhd = 'HRA' OR gs_saltrn-salhd = 'LTA' ) AND gs_saltrn-empno = lv_empno .
          lv_sub_total = lv_sub_total + gs_saltrn-salary.
        ENDIF.
        IF gs_saltrn-salhd = 'BAS' AND gs_saltrn-empno = lv_empno.
          READ TABLE gt_monthlyatt INTO gs_monthlyatt WITH KEY empno = gs_saltrn-empno.
          lv_monthly_salary = ( gs_saltrn-salary / gs_monthlyatt-total_days ) * gs_monthlyatt-days_present .
          lv_pf = ( gs_saltrn-salary / 100 ) * 12 .
          gs_saltrn-salary = lv_monthly_salary.
          CLEAR lv_monthly_salary.
          MODIFY  gt_saltrn FROM gs_saltrn TRANSPORTING salary WHERE empno = gs_saltrn-empno AND salhd = 'BAS'.
        ENDIF.
        IF ( gs_saltrn-salhd = 'BAS' OR gs_saltrn-salhd = 'HRA' OR gs_saltrn-salhd = 'LTA' )   AND gs_saltrn-empno = lv_empno .
          lv_total_temp = lv_total_temp + gs_saltrn-salary.
        ENDIF.
        lv_total = lv_total_temp - lv_pf .

      ENDLOOP.

      gs_saltrn-empno = gs_saltrn-empno.
      gs_saltrn-yymm = gs_saltrn-yymm.
      gs_saltrn-salhd = 'PF'.
      gs_saltrn-salary = lv_pf.
      gs_saltrn-waers = gs_saltrn-waers.
      APPEND gs_saltrn TO gt_saltrn.
      SELECT * FROM y47d_saltrn WHERE empno = gs_saltrn-empno AND yymm = gs_mtdatt-yymm.
      ENDSELECT.
      IF sy-subrc <> 0 .
        LOOP AT gt_saltrn INTO gs_saltrn.
          IF gs_saltrn-salhd = 'SUBTOTAL' OR gs_saltrn-salhd = 'TOTAL'.
          ELSE.
            MOVE-CORRESPONDING gs_saltrn TO gs_saltrn_temp.
            APPEND gs_saltrn_temp TO gt_saltrn_temp.
          ENDIF.
        ENDLOOP.
        MODIFY y47d_saltrn FROM TABLE gt_saltrn_temp.
        IF sy-subrc = 0.
          MESSAGE: 'Successfully Data Inserted' TYPE 'S'.
        ELSE.
          MESSAGE: 'Error While saving data' TYPE 'E'.
        ENDIF.
      ELSE.
        MESSAGE: 'Data already exists' TYPE 'S'.
      ENDIF.
      gs_saltrn-empno = gs_saltrn-empno.
      gs_saltrn-yymm = gs_saltrn-yymm.
      gs_saltrn-salhd = 'SUBTOTAL'.
      gs_saltrn-salary = lv_sub_total.
      gs_saltrn-waers = gs_saltrn-waers.
      APPEND gs_saltrn TO gt_saltrn.
      CLEAR lv_sub_total.
      gs_saltrn-empno = gs_saltrn-empno.
      gs_saltrn-yymm = gs_saltrn-yymm.
      gs_saltrn-salhd = 'TOTAL'.
      gs_saltrn-salary = lv_total.
      gs_saltrn-waers = gs_saltrn-waers.
      APPEND gs_saltrn TO gt_saltrn.
      CLEAR lv_total.
    ENDAT.
  ENDLOOP.
DATA: lv_index TYPE i.
  LOOP AT gt_saltrn INTO gs_saltrn.
    lv_index = sy-tabix.
    IF gs_saltrn-salhd = 'TOTAL'.
      gs_cellcolor-fname = 'SALHD'.
      gs_cellcolor-color-col = 3.
      gs_cellcolor-color-int = '1'.
      gs_cellcolor-color-inv = '0'.
      APPEND gs_cellcolor TO gs_saltrn-cellcolor.
      CLEAR gs_cellcolor.
      MODIFY gt_saltrn FROM gs_saltrn INDEX lv_index TRANSPORTING cellcolor.
    ENDIF.
  ENDLOOP.


  IF sy-subrc = 0 .
    PERFORM fieldcat3.
    PERFORM display_layout3.
  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*& Form Display_sal_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM Display_sal_data .
  PERFORM fill_field USING 'empno' 'gt_salary_details' 'Employee Number' '' '' '' ''.
  PERFORM fill_field USING 'salhd' 'gt_salary_details' 'Salary Header' '' '' '' ''.
  PERFORM fill_field USING 'salary' 'gt_salary_details' 'Salary' '' '' '' ''.
  PERFORM fill_field USING 'waers' 'gt_salary_details' 'Waers' '' '' '' ''.
  PERFORM fill_field USING 'saltp' 'gt_salary_details' 'Salary Type' '' '' '' ''.

ENDFORM.
**&---------------------------------------------------------------------*
**&      Form  call_alv
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
**  -->  p1        text
**  <--  p2        text
**----------------------------------------------------------------------*
*FORM call_alv.
*  gv_repid = sy-repid.
*  IF ( pr_agrid = 'X' ).
*    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
*      EXPORTING
*        i_callback_program      = gv_repid
*        it_fieldcat             = gt_fieldcat[]
*        it_events               = gt_events[]
*        i_save                  = 'A'
*        is_variant              = gs_variant
*        i_callback_user_command = gv_user_command
*      TABLES
*        t_outtab                = gt_tab.
*  ELSE.
*    CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
*      EXPORTING
*        i_callback_program      = gv_repid
*        it_fieldcat             = gt_fieldcat[]
*        it_events               = gt_events[]
*        i_callback_user_command = gv_user_command
*        i_save                  = 'A'
*        is_variant              = gs_variant
*      TABLES
*        t_outtab                = gt_tab.
*
*  ENDIF.
*
*ENDFORM.                    " call_alv
**&---------------------------------------------------------------------*
**&      Form  fill_field_catlog
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
**      -->P_0560   text
**      -->P_0561   text
**      -->P_0562   text
**      -->P_0563   text
**      -->P_0564   text
**      -->P_0565   text
**      -->P_0566   text
**      -->P_0567   text
**----------------------------------------------------------------------*
FORM fill_field USING    uv_itab_field_name
                         uv_ref_field_table
                         uv_short_text1
                         uv_key_field_flag
                         uv_ref_field_name
                         uv_currency_fieldname
                         uv_quantity_fieldname.

  DATA: ls_fieldcat TYPE slis_fieldcat_alv.

  CLEAR: ls_fieldcat.
  gv_pos = gv_pos + 1.

  ls_fieldcat-col_pos       = gv_pos.
  ls_fieldcat-fieldname     = uv_itab_field_name.
  ls_fieldcat-tabname       = uv_ref_field_table.
  ls_fieldcat-seltext_m     = uv_short_text1.

*  ls_fieldcat-ref_fieldname = uv_ref_field_name.
*  ls_fieldcat-ref_tabname   = uv_ref_field_table.
*  ls_fieldcat-seltext_s     = uv_short_text1.

*  ls_fieldcat-seltext_l     = uv_short_text1.

*  ls_fieldcat-reptext_ddic  = uv_short_text1.
*  ls_fieldcat-key           = uv_key_field_flag.
*  ls_fieldcat-cfieldname    = uv_currency_fieldname.
*  ls_fieldcat-qfieldname    = uv_quantity_fieldname.
  CLEAR gs_layout.
  gs_layout-colwidth_optimize = 'X'.
  gs_layout-coltab_fieldname = 'CELLCOLOR'.
  APPEND ls_fieldcat TO  gt_fieldcat.

ENDFORM.                    " fill_field_catlog

FORM fill_field1 USING    uv_itab_field_name
*                         uv_ref_field_name
                         uv_ref_field_table
*                         uv_key_field_flag
                         uv_short_text1.
*                         uv_currency_fieldname
*                         uv_quantity_fieldname.

  DATA: ls_fieldcat1 TYPE slis_fieldcat_alv.

  CLEAR ls_fieldcat1 .

  gv_pos = gv_pos + 1.

  ls_fieldcat1-col_pos       = gv_pos.
  ls_fieldcat1-fieldname     = uv_itab_field_name.
  ls_fieldcat1-tabname       = uv_ref_field_table .
*  ls_fieldcat-ref_fieldname = uv_ref_field_name.
*  ls_fieldcat-ref_tabname   = uv_ref_field_table.
*  ls_fieldcat-seltext_s     = uv_short_text1.
  ls_fieldcat1-seltext_m     = uv_short_text1.
  gs_layout-colwidth_optimize = 'X'.
*  ls_fieldcat-seltext_l     = uv_short_text1.
*  ls_fieldcat-reptext_ddic  = uv_short_text1.
*  ls_fieldcat-key           = uv_key_field_flag.
*  ls_fieldcat-cfieldname    = uv_currency_fieldname.
*  ls_fieldcat-qfieldname    = uv_quantity_fieldname.
  APPEND ls_fieldcat1 TO  gt_fieldcat1.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form fill_field3
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM fill_field3  USING     uv_itab_field_name
                         uv_ref_field_table
                         uv_short_text1
                         uv_key_field_flag
                         uv_ref_field_name
                         uv_currency_fieldname
                         uv_quantity_fieldname.

  DATA: ls_fieldcat3 TYPE slis_fieldcat_alv.

  CLEAR ls_fieldcat3.
  gv_pos = gv_pos + 1.

  ls_fieldcat3-col_pos       = gv_pos.
  ls_fieldcat3-fieldname     = uv_itab_field_name.
  ls_fieldcat3-tabname = uv_ref_field_table.
  ls_fieldcat3-ref_fieldname = uv_ref_field_name.
*  ls_fieldcat-ref_tabname   = uv_ref_field_table.
  ls_fieldcat3-seltext_s     = uv_short_text1.
  ls_fieldcat3-seltext_m     = uv_short_text1.
  ls_fieldcat3-seltext_l     = uv_short_text1.
  gs_layout-colwidth_optimize = 'X'.
  gs_layout-coltab_fieldname = 'CELLCOLOR'.
  ls_fieldcat3-reptext_ddic  = uv_short_text1.
  ls_fieldcat3-key           = uv_key_field_flag.
  ls_fieldcat3-cfieldname    = uv_currency_fieldname.
  ls_fieldcat3-qfieldname    = uv_quantity_fieldname.
  APPEND ls_fieldcat3 TO  gt_fieldcat3.

ENDFORM.
*.
***&---------------------------------------------------------------------*
***&      Form  get_data
***&---------------------------------------------------------------------*
***       text
***----------------------------------------------------------------------*
***  -->  p1        text
***  <--  p2        text
***----------------------------------------------------------------------*
**FORM get_data .
**
*** select bukrs butxt into table gt_tab
***   from t001 where bukrs in s_bukrs.
**
**ENDFORM.                    "get_data
**&--------------------------------------------------------------------*
**&      Form  eventtab_build
**&--------------------------------------------------------------------*
**       text
**---------------------------------------------------------------------*
**      -->LT_EVENTS  text
**---------------------------------------------------------------------*
*FORM build_eventtab USING ut_events TYPE slis_t_event.
*  DATA: ls_event TYPE slis_alv_event.
**
*  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
*    EXPORTING
*      i_list_type = 0
*    IMPORTING
*      et_events   = ut_events.
*
*  READ TABLE ut_events WITH KEY name =  slis_ev_top_of_page
*                       INTO ls_event.
*
*  IF sy-subrc = 0.
*    MOVE cv_formname_top_of_page TO ls_event-form.
*    APPEND ls_event TO ut_events.
*  ENDIF.
*ENDFORM.                    "eventtab_build
**&--------------------------------------------------------------------*
**&      Form  comment_build
**&--------------------------------------------------------------------*
**       text
**---------------------------------------------------------------------*
**      -->LT_TOP_OF_Ptext
**---------------------------------------------------------------------*
*FORM comment_build USING lt_top_of_page TYPE slis_t_listheader.
*  DATA: ls_line TYPE slis_listheader.
**
** Listen berschrift: Typ H -------------------------------------------*
** CLEAR LS_LINE.
** LS_LINE-TYP  = 'H'.
** LS_LINE-KEY:  not used for this type
** LS_LINE-INFO(10) = 'Terminart:'(001).
** LS_LINE-INFO+12(1) = TERM-ART.
** APPEND LS_LINE TO LT_TOP_OF_PAGE.
*
** Kopfinfo: Typ S ----------------------------------------------------*
*  CLEAR ls_line.
*  PERFORM create_headline USING   '25'
*                          CHANGING ls_line.
*  ls_line-typ  = 'S'.
** LS_LINE-KEY  = 'KEY1'.
** LS_LINE-INFO = TEXT-xxx.
*  APPEND ls_line TO lt_top_of_page.
*
*ENDFORM.                    "comment_build
*
*
**&--------------------------------------------------------------------*
**&      Form  create_headline
**&--------------------------------------------------------------------*
**       text
**---------------------------------------------------------------------*
**      -->OFFSET     text
**      -->LS_LINE    text
**---------------------------------------------------------------------*
*FORM create_headline USING    offset  TYPE stat_offset
*                     CHANGING ls_line TYPE slis_listheader.
*
*
** parameter offset sollte nach den fixen Keyspalten aufsetzen
*  DATA: string(120).
*  CLEAR string.
*
*  WRITE:            'Datum:'(ue1)       TO string,
*                    sy-datum DD/MM/YYYY TO string+10(10),
*                    ','                 TO string+20(2),
*                    'Zeit'(ue2)         TO string+22(5),
*                    sy-uzeit            TO string+27(10)
*                                        USING EDIT MASK '__:__:__',
*                    ','                 TO string+37(2),
*                    'Benutzer'(ue3)     TO string+39(10),
*                    sy-uname            TO string+49(10).
*  CONDENSE string.
*  MOVE string TO ls_line+offset.
*ENDFORM.                               " TOP_STANDARD
*
*
**&--------------------------------------------------------------------*
**&      Form  user_command
**&--------------------------------------------------------------------*
**       text
**---------------------------------------------------------------------*
**      -->UCOMM      text
**      -->SELFIELD   text
**---------------------------------------------------------------------*
*FORM user_command USING ucomm    LIKE sy-ucomm
*                        selfield TYPE slis_selfield.
*  CASE ucomm.
*    WHEN '&IC1'. "Double Click Event
*      IF selfield-fieldname = 'BUKRS'.
**        READ TABLE gt_tab INTO data(gs_tab)
**              INDEX selfield-tabindex.
**        SET PARAMETER ID 'BUK' FIELD gs_tab-bukrs.
**        SET PARAMETER ID 'BLN' FIELD gs_tab-belnr.
**        SET PARAMETER ID 'GJR'  FIELD gs_tab-gjahr.
**        CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
*      ENDIF.
*  ENDCASE.
*ENDFORM.                    "user_command

FORM user_command USING uv_comm LIKE sy-ucomm
                        us_selfield TYPE slis_selfield .
  CASE uv_comm.
    WHEN '&IC1'.

      SELECT empno empnm gender birthdt joiningdt phone_no email_id deptcd wlcd designation bankac banknm
        FROM y47m_empmst
        INTO TABLE gt_empmst_temp
      WHERE empno  = us_selfield-value.
        IF sy-subrc = 0.
          gv_screen = gv_screen + 1.
        ENDIF.
      LOOP AT gt_empmst_temp INTO gs_empmst_temp.
        MOVE-CORRESPONDING gs_empmst_temp TO gs_empmst.
        IF gs_empmst-gender = 'M'.
          gs_empmst-gender = 'MALE'.
        ELSEIF gs_empmst-gender = 'F'.
          gs_empmst-gender = 'FEMALE'.
        ELSEIF gs_empmst-gender = 'O'.
          gs_empmst-gender = 'Other'.
        ENDIF.
        SELECT SINGLE deptnm
          FROM y47c_deptmst
          INTO gs_empmst-deptcd
        WHERE deptcd = gs_empmst-deptcd.
        SELECT SINGLE wldesc
          FROM y47c_workloc
          INTO gs_empmst-wlcd
        WHERE wlcd = gs_empmst-wlcd.
*        SELECT SINGLE empno salhd salary waers
*          FROM y47m_salmst
*          INTO gs_salmst
*          WHERE salhd = 'BAS' AND empno = gs_empmst-empno.
*        gs_empmst-total = gs_salmst-salary.
        SELECT empno salhd salary waers
          FROM  y47m_salmst
          INTO TABLE gt_salmst
        WHERE empno = gs_empmst-empno.
        LOOP AT gt_salmst INTO gs_salmst.
          IF gs_salmst-salhd = 'BAS' OR gs_salmst-salhd = 'HRA' OR gs_salmst-salhd = 'LTA'.
            gs_empmst-total = gs_empmst-total + gs_salmst-salary.
            gs_empmst-waers = gs_salmst-waers.
          ENDIF.
        ENDLOOP.
        APPEND gs_empmst TO gt_empmst.
        CLEAR gs_empmst.
      ENDLOOP.


      IF sy-subrc = 0 .
        PERFORM fieldcat2.
        PERFORM display_layout2.
      ENDIF.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form fieldcat2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM fieldcat2 .
  PERFORM fill_field1 USING 'empno' 'gt_empmst' 'Employee Number'.
  PERFORM fill_field1 USING 'empnm' 'gt_empmst' 'Employee Name'.
  PERFORM fill_field1 USING 'Gender' 'gt_empmst' 'Gender'.
  PERFORM fill_field1 USING 'birthdt' 'gt_empmst' 'Birthdate'.
  PERFORM fill_field1 USING 'joiningdt' 'gt_empmst' 'Joining Date'.
  PERFORM fill_field1 USING 'phone_no' 'gt_empmst' 'Phone Number'.
  PERFORM fill_field1 USING 'email_id' 'gt_empmst' 'Email ID'.
  PERFORM fill_field1 USING 'deptcd' 'gt_empmst' 'Department'.
  PERFORM fill_field1 USING 'wlcd' 'gt_empmst' 'Work Location'.
  PERFORM fill_field1 USING 'designation' 'gt_empmst' 'Designation'.
  PERFORM fill_field1 USING 'bankac' 'gt_empmst' 'Bank Account No.'.
  PERFORM fill_field1 USING 'banknm' 'gt_empmst' 'Bank Name'.
  PERFORM fill_field1 USING 'total' 'gt_empmst' 'Total Salary'.
  PERFORM fill_field1 USING 'waers' 'gt_empmst' 'Currency'.
ENDFORM.

*------------------------------------------*


FORM user_command2 USING uv_comm LIKE sy-ucomm
                        us_selfield TYPE slis_selfield .



ENDFORM.

*&---------------------------------------------------------------------*
*& Form fieldcat3
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM fieldcat3 .
  PERFORM fill_field3 USING 'empno' 'gt_saltrn' 'Employee Number' '' '' '' ''.
  PERFORM fill_field3 USING 'yymm' 'gt_saltrn' 'Year & Month' '' '' '' ''.
  PERFORM fill_field3 USING 'salhd' 'gt_saltrn' 'Salary Header' '' '' '' ''.
  PERFORM fill_field3 USING 'salary' 'gt_saltrn' 'Salary' '' '' '' ''.
  PERFORM fill_field3 USING 'waers' 'gt_saltrn' 'Waers' '' '' '' ''.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_OTHER_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_other_data .

ENDFORM.                    " FILL_OTHER_DATA



*&---------------------------------------------------------------------*
*& Form AlV_DISPLAY
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM AlV_DISPLAY .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program      = sy-repid
      i_callback_user_command = 'USER_COMMAND'
      i_callback_top_of_page  = 'TOP_OF_PAGE'
      is_layout               = gs_layout
      it_fieldcat             = gt_fieldcat
    TABLES
      t_outtab                = gt_monthlyatt
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form display_layout2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_layout2 .

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK      = ' '
*     I_BYPASSING_BUFFER     = ' '
*     I_BUFFER_ACTIVE        = '. '
      i_callback_program     = sy-repid
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           =
      i_callback_top_of_page = 'TOP_OF_PAGE'
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME       =
*     I_BACKGROUND_ID        = ' '
*     I_GRID_TITLE           =
*     I_GRID_SETTINGS        =
      is_layout              = gs_layout
      it_fieldcat            = gt_fieldcat1
*     IT_EXCLUDING           =
*     IT_SPECIAL_GROUPS      =
*     IT_SORT                =
*     IT_FILTER              =
*     IS_SEL_HIDE            =
*     I_DEFAULT              = 'X'
*     I_SAVE                 = ' '
*     IS_VARIANT             =
*     IT_EVENTS              =
*     IT_EVENT_EXIT          =
*     IS_PRINT               =
*     IS_REPREP_ID           =
*     I_SCREEN_START_COLUMN  = 0
*     I_SCREEN_START_LINE    = 0
*     I_SCREEN_END_COLUMN    = 0
*     I_SCREEN_END_LINE      = 0
*     I_HTML_HEIGHT_TOP      = 0
*     I_HTML_HEIGHT_END      = 0
*     IT_ALV_GRAPHICS        =
*     IT_HYPERLINK           =
*     IT_ADD_FIELDCAT        =
*     IT_EXCEPT_QINFO        =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER           =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER =
    TABLES
      t_outtab               = gt_empmst
    EXCEPTIONS
      program_error          = 1
      OTHERS                 = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
  CLEAR:gt_fieldcat1.
  CLEAR gt_empmst.
  gv_screen = gv_screen - 1.
ENDFORM.




*&---------------------------------------------------------------------*
*& Form display_layout3
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_layout3 .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK       = ' '
*     I_BYPASSING_BUFFER      = ' '
*     I_BUFFER_ACTIVE         = ' '
      i_callback_program      = sy-repid
*     I_CALLBACK_PF_STATUS_SET          = ' '
      i_callback_user_command = 'USER_COMMAND'
      i_callback_top_of_page  = 'TOP_OF_PAGE'
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME        =
*     I_BACKGROUND_ID         = ' '
*     I_GRID_TITLE            =
*     I_GRID_SETTINGS         =
      is_layout               = gs_layout
      it_fieldcat             = gt_fieldcat3
*     IT_EXCLUDING            =
*     IT_SPECIAL_GROUPS       =
*     IT_SORT                 =
*     IT_FILTER               =
*     IS_SEL_HIDE             =
*     I_DEFAULT               = 'X'
*     I_SAVE                  = ' '
*     IS_VARIANT              =
*     IT_EVENTS               =
*     IT_EVENT_EXIT           =
*     IS_PRINT                =
*     IS_REPREP_ID            =
*     I_SCREEN_START_COLUMN   = 0
*     I_SCREEN_START_LINE     = 0
*     I_SCREEN_END_COLUMN     = 0
*     I_SCREEN_END_LINE       = 0
*     I_HTML_HEIGHT_TOP       = 0
*     I_HTML_HEIGHT_END       = 0
*     IT_ALV_GRAPHICS         =
*     IT_HYPERLINK            =
*     IT_ADD_FIELDCAT         =
*     IT_EXCEPT_QINFO         =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER =
*     ES_EXIT_CAUSED_BY_USER  =
    TABLES
      t_outtab                = gt_saltrn
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
  CLEAR gt_saltrn.
  CLEAR gt_fieldcat3.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form f4_help
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f4_help .


  DATA: lt_return TYPE TABLE OF ddshretval.

  SELECT yymm

    FROM y47d_mtdatt
  INTO TABLE @DATA(lt_mtdatt).


  IF sy-subrc = 0.

*    SORT lt_mtdatt BY yymm ASCENDING.

    CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
      EXPORTING
*       DDIC_STRUCTURE  = ' '
        retfield        = 'YYMM'
*       PVALKEY         = ' '
*       DYNPPROG        = ' '
*       DYNPNR          = ' '
*       DYNPROFIELD     = ' '
*       STEPL           = 0
*       WINDOW_TITLE    =
*       VALUE           = ' '
        value_org       = 'S'
*       MULTIPLE_CHOICE = ' '
*       DISPLAY         = ' '
*       CALLBACK_PROGRAM       = ' '
*       CALLBACK_FORM   = ' '
*       CALLBACK_METHOD =
*       MARK_TAB        =
*     IMPORTING
*       USER_RESET      =
      TABLES
        value_tab       = lt_mtdatt
*       FIELD_TAB       =
        return_tab      = lt_return
*       DYNPFLD_MAPPING =
      EXCEPTIONS
        parameter_error = 1
        no_values_found = 2
        OTHERS          = 3.

    IF sy-subrc = 0.
      LOOP AT lt_return INTO DATA(ls_return).
        p_yymm = ls_return-fieldval.
      ENDLOOP.
    ENDIF.
  ENDIF.




ENDFORM.
*&---------------------------------------------------------------------*
*& Form Selection_screen_Validation
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM Selection_screen_Validation .
gv_date_string = p_yymm.
  SHIFT gv_date_string LEFT DELETING LEADING '0'.
  gv_date_len = strlen( gv_date_string ).

  IF gv_date_len = 6.
    gv_date1 = gv_date_string+0(4).
    gv_date2 = gv_date_string+4(2).
    IF gv_date2 > 12 OR gv_date2 < 1.
      MESSAGE ID 'Y47' TYPE 'E' NUMBER '026'.
    ENDIF.

    CONCATENATE p_yymm '01' INTO gv_date.
    IF p_yymm > sy-datum+0(6).
      MESSAGE ID 'Y47' TYPE 'E' NUMBER '027'.
    ENDIF.
  ELSE.
    MESSAGE ID 'Y47' TYPE 'E' NUMBER '028'.
  ENDIF.
ENDFORM.
